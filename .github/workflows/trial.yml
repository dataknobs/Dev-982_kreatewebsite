name: Convert PPT to Images and Save in Another Repo

on:
  push:
    branches:
      - main
   
jobs:
  get_ppt_name:
    runs-on: ubuntu-latest

    outputs:
      ppt_name: ${{ steps.get_ppt_name.outputs.ppt_names }}

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Get PPT File Name
        id: get_ppt_name
        run: |
          ppt_file=$(find . -name "*.pptx")
          ppt_name=$(basename "$ppt_file" .pptx)
          echo "Output of this $ppt_name"

          # Export the variable so that it can be used in subsequent steps and jobs
          echo "ppt_names=$ppt_name" >> $GITHUB_OUTPUT
          
            
  convert_ppt_to_pdf:
    runs-on: ubuntu-latest
    needs: get_ppt_name
    
    
    steps:
      - name: Checkout Code
        uses: actions/checkout@v2
        
      - name: Get Repository Name
        run: |
          # Extract the repository name from $GITHUB_REPOSITORY
          REPO_NAME=$(basename $GITHUB_REPOSITORY)
          echo "Repository name without owner: $REPO_NAME"

      - name: Install Poppler and Libreoffice
        run: |
          sudo apt-get update 
          sudo apt-get install -y poppler-utils
          sudo apt update 
          sudo apt install libreoffice

      - name: Convert PPT to PDF and Create Artifact
        run: |
          
          libreoffice --headless --convert-to pdf input/content/"${{needs.get_ppt_name.outputs.ppt_name}}".pptx

          # Your commands to convert PPT to PDF using an appropriate tool (e.g., LibreOffice)
                  
       
      - name: Convert PDF to Images
        run: |
          
          # Create a directory to store the images
          mkdir "${{needs.get_ppt_name.outputs.ppt_name}}"

          # Convert PDF to images using pdftoppm
          pdftoppm -png "${{needs.get_ppt_name.outputs.ppt_name}}".pdf "${{needs.get_ppt_name.outputs.ppt_name}}"/slide 
          
      - name: Move PDF file into dir
        run: |
          mv "${{needs.get_ppt_name.outputs.ppt_name}}".pdf "${{needs.get_ppt_name.outputs.ppt_name}}" || true
          
      - name: Verify PDF Output
        run: |
          # List files in the current directory to check if the PDF was generated
          ls -a
          
      - name: Upload Artifact - images
        uses: actions/upload-artifact@v2
        with:
          name: converted-images
          path: "${{needs.get_ppt_name.outputs.ppt_name}}"
          

      - name: Checkout Output Repository
        uses: actions/checkout@v2
        with:
          repository: kreatewebsite/kreate_output
          token: ${{ secrets.TOKEN }}
          ref: main
        
      - name: Download Artifacts
        uses: actions/download-artifact@v2
        with:
          name: converted-images
          path: "${{needs.get_ppt_name.outputs.ppt_name}}"
      
      - name: Create Username folder to store output
        run: |
          mkdir "$REPO_NAME"
          ls -a
          
      - name: Move image folder to Output Repository
        run: |
          mv "${{needs.get_ppt_name.outputs.ppt_name}}" "$REPO_NAME"
          ls -a
      - name: Commit and Push Image to Output Repository
        run: |
          
          git config --global user.name "Dev-98"
          git config --global user.email "devparker48@gmail.com"
          git add .
          git commit -m "Add PDF output"
          git push origin main

